<?php
// $Id: project_release.install,v 1.1.2.12 2006/12/08 20:46:23 dww Exp $
// $Name:  $

function project_release_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE IF NOT EXISTS {project_release_nodes} (
          nid int unsigned NOT NULL default '0',
          pid int unsigned NOT NULL default '0',
          version varchar(255) NOT NULL default '',
          tag varchar(255) NOT NULL default '',
          file_path varchar(255) NOT NULL default '',
          file_date int unsigned NOT NULL default '0',
          file_hash varchar(32) NOT NULL default '',
          rebuild tinyint default '0',
          version_major int default NULL,
          version_minor int default NULL,
          version_patch int default NULL,
          version_extra varchar(255) default NULL,
          PRIMARY KEY (nid),
          KEY project_releases_pid (pid)
        ) TYPE=MyISAM
        /*!40100 DEFAULT CHARACTER SET utf8 */;");
      db_query("CREATE TABLE IF NOT EXISTS {project_release_projects} (
          nid int unsigned NOT NULL default '0',
          releases tinyint NOT NULL default '1',
          snapshot_table tinyint unsigned NOT NULL default '1',
          version_format varchar(255) NOT NULL default '',
          PRIMARY KEY (nid),
          KEY project_release_projects_releases (releases)
        ) TYPE=MyISAM
        /*!40100 DEFAULT CHARACTER SET utf8 */;");
      db_query("CREATE TABLE IF NOT EXISTS {project_release_default_versions} (
          nid int unsigned NOT NULL default '0',
          tid int unsigned NOT NULL default '0',
          major int unsigned NOT NULL default '0',
          PRIMARY KEY (nid, tid)
        ) TYPE=MyISAM
        /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;

    case 'pgsql':
      if (!project_release_db_table_exists('project_release_nodes')) {
        db_query("CREATE TABLE {project_release_nodes} (
            nid int NOT NULL default '0',
            pid int NOT NULL default '0',
            version varchar(255) NOT NULL default '',
            tag varchar(255) NOT NULL default '',
            file_path varchar(255) NOT NULL default '',
            file_date int NOT NULL default '0',
            file_hash varchar(32) NOT NULL default '',
            rebuild smallint default '0',
            version_major int default NULL,
            version_minor int default NULL,
            version_patch int default NULL,
            version_extra varchar(255) default NULL,
            PRIMARY KEY (nid),
            KEY project_releases_pid (pid)
          );");
      }
      if (!project_release_db_table_exists('project_release_projects')) {
        db_query("CREATE TABLE {project_release_projects} (
            nid int NOT NULL default '0',
            releases smallint NOT NULL default '1',
            snapshot_table smallint NOT NULL default '1',
            version_format varchar(255) NOT NULL default '',
            PRIMARY KEY (nid),
            KEY project_release_projects_releases (releases)
          );");
      }
      if (!project_release_db_table_exists('project_release_default_versions')) {
        db_query("CREATE TABLE {project_release_default_versions} (
            nid int NOT NULL default '0',
            tid int NOT NULL default '0',
            major int NOT NULL default '0',
            PRIMARY KEY (nid, tid)
          );"); 
      }
      break;
  }
  db_query("UPDATE {system} SET weight = 2 WHERE name = 'project_release'");
  db_query("DELETE FROM {variable} WHERE name = 'project_browse_releases'");
}

/**
 * Adds the {project_release_default_versions} table for branch-aware
 * default versions and populates it the best it can.
 */
function project_release_update_1() {
  $ret = array();

  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql(
        "CREATE TABLE IF NOT EXISTS {project_release_default_versions} (
          nid int unsigned NOT NULL default '0',
          tid int unsigned NOT NULL default '0',
          major int unsigned NOT NULL default '0',
          PRIMARY KEY (nid, tid)
        ) TYPE=MyISAM /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      if (!project_release_db_table_exists('project_release_default_versions')) {
        $ret[] = update_sql(
          "CREATE TABLE {project_release_default_versions} (
            nid int NOT NULL default '0',
            tid int NOT NULL default '0',
            major int NOT NULL default '0',
            PRIMARY KEY (nid, tid)
          );"); 
      }
      break;
  }

  // Initially populate based on the existing default release, if that
  // release is a real release with a valid compatibility taxonomy.
  $ret[] = update_sql("INSERT INTO {project_release_default_versions} (nid, tid, major) SELECT pp.nid, tn.tid, prn.version_major FROM {project_projects} pp INNER JOIN {project_release_nodes} prn ON pp.version = prn.nid INNER JOIN {term_node} tn ON tn.nid = prn.nid");

  // Now, add in values for any other distinct branches we know about
  // for each project, for all active compatibility terms.
  $tids = variable_get('project_release_active_compatibility_tids', '');
  if (!empty($tids)) {
    $where_tid = 'AND tn.tid IN (' . implode(',', array_filter($tids)) . ') ';
  }
  $ret[] = update_sql("INSERT INTO {project_release_default_versions} (nid, tid, major) SELECT prn.pid, tn.tid, MIN(prn.version_major) FROM {project_release_nodes} prn INNER JOIN {term_node} tn ON prn.nid = tn.nid LEFT JOIN {project_release_default_versions} prdv ON prdv.nid = prn.pid AND prdv.tid = tn.tid WHERE prn.version_major IS NOT NULL AND prdv.nid IS NULL AND prdv.tid IS NULL $where_tid GROUP BY prn.pid, tn.tid");

  return $ret;
}

/**
 * Add a new column to {project_release_projects} that determines if
 * the development snapshot table should be shown on project nodes.
 */
function project_release_update_2() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {project_release_projects} ADD snapshot_table tinyint unsigned default '1' NOT NULL");
      break;
    case 'pgsql':
      db_add_column($ret, 'project_release_projects', 'snapshot_table', 'smallint', array('default' => 1, 'not null' => TRUE));
      break;
  }
  return $ret;
}


function project_release_db_table_exists($table) {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      return db_num_rows(db_query("SHOW TABLES LIKE '{" . db_escape_table($table) . "}'"));
      break;

    case 'pgsql':
      return db_num_rows(db_query("SELECT relname FROM pg_class WHERE relname = '{" . db_escape_table($table) . "}'"));
      break;
  }
}

